import { inferSchema } from 'postgres-schema-ts';
import { promisify } from 'util';
import fs from 'fs';
import prettier from 'prettier';

import { env } from './src/server/env';
import prettierConfig from './prettier.config';

const writeFile = promisify(fs.writeFile);

function modify(types: string) {
  const mod = types.replace(/Object \| null/g, 'JSONValue');
  const code = `/*
AUTOGENERATED FILE - DO NOT EDIT
--------------------------------
To edit this file, go to ./schema.ts
*/
/* eslint-disable @typescript-eslint/naming-convention */
export type JSONValue =
  | null
  | boolean
  | number
  | string
  | JSONObject
  | JSONArray;
export type JSONObject = { [k: string]: JSONValue };
export type JSONArray = JSONValue[]

${mod}
/* eslint-enable @typescript-eslint/naming-convention */
`;
  return prettier.format(code, prettierConfig as any);
}

async function run() {
  const res = await inferSchema(env.databaseUrl);
  const body = modify(res);
  await writeFile('./src/types/db.ts', body);
  return body;
}

run()
  .then((res) => {
    console.log(res);
    process.exit();
    return res;
  })
  .catch((err) => {
    console.error(err);
    process.exit();
  });
